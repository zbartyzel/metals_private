[
  {
    "id" : "0b7259a3-fe87-414c-a533-83cd4793c1c4",
    "prId" : 2435,
    "prUrl" : "https://github.com/scalameta/metals/pull/2435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6831fc6f-cca0-4944-96fd-2288cccb79ce",
        "parentId" : null,
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "Totally just curious, but what is an example of a synthetic here that would be multi-line? ",
        "createdAt" : "2021-01-28T10:48:29Z",
        "updatedAt" : "2021-01-28T12:14:39Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      },
      {
        "id" : "92f9784e-17a4-4d19-9fbb-d0e7d6446760",
        "parentId" : "6831fc6f-cca0-4944-96fd-2288cccb79ce",
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "Especially things like `augmentString()` can span multiple lines. There are exmaple in the `SyntheticDecorationsLspSuite` `augment-string` test.",
        "createdAt" : "2021-01-28T11:14:58Z",
        "updatedAt" : "2021-01-28T12:14:39Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      },
      {
        "id" : "edc6dc11-6544-4860-aee1-fd0c2ad7c09c",
        "parentId" : "6831fc6f-cca0-4944-96fd-2288cccb79ce",
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "ok cool, I'll check those out. Thanks!",
        "createdAt" : "2021-01-28T11:16:20Z",
        "updatedAt" : "2021-01-28T12:14:39Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4f8c1edc27375c09baea128c304e6ddbb915c2a",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +141,145 @@            realRange <- edit.toRevisedStrict(range).toIterable\n            lspRealRange = realRange.toLSP\n            if lspRealRange.getEnd.getLine == line\n          } yield (lspRealRange, fullSnippet)\n"
  },
  {
    "id" : "12dde628-9188-40d5-a52e-0776b4380029",
    "prId" : 2435,
    "prUrl" : "https://github.com/scalameta/metals/pull/2435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca44abcb-2ade-43b0-a90f-7e7618be39f0",
        "parentId" : null,
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "What does `rhs` stand for? I know it's a `Term`, but am a bit unfamiliar with it?",
        "createdAt" : "2021-01-28T11:00:57Z",
        "updatedAt" : "2021-01-28T12:14:39Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      },
      {
        "id" : "eb95c935-3877-426e-a443-09bccbeb69ee",
        "parentId" : "ca44abcb-2ade-43b0-a90f-7e7618be39f0",
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "That's `right hand side` - it's heavily used in the parser, maybe too heavily :sweat_smile: ",
        "createdAt" : "2021-01-28T11:15:43Z",
        "updatedAt" : "2021-01-28T12:14:39Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      },
      {
        "id" : "919d3e49-1f5e-4d55-be50-f04fe478d1ab",
        "parentId" : "ca44abcb-2ade-43b0-a90f-7e7618be39f0",
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "ah of course. I figured it was something super obvious I wasn't thinking of 👍🏼 ",
        "createdAt" : "2021-01-28T11:16:53Z",
        "updatedAt" : "2021-01-28T12:14:39Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4f8c1edc27375c09baea128c304e6ddbb915c2a",
    "line" : 175,
    "diffHunk" : "@@ -1,1 +389,393 @@          val values =\n            if (vl.decltpe.isEmpty) explorePatterns(vl.pats) else Nil\n          values ++ visit(vl.rhs)\n        case vr: m.Defn.Var =>\n          val values ="
  },
  {
    "id" : "78f2b845-813f-45ad-a30d-48ea518df3d0",
    "prId" : 2345,
    "prUrl" : "https://github.com/scalameta/metals/pull/2345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1cbf326-32ed-4a66-be3e-18d29c8766a2",
        "parentId" : null,
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "Out of curiosity, was this causing issues before? In reality, what other types of files would actually be hitting this? Java files?",
        "createdAt" : "2020-12-30T19:24:49Z",
        "updatedAt" : "2020-12-31T10:33:41Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      },
      {
        "id" : "745b96c2-71a6-4092-b2b6-935420a74038",
        "parentId" : "e1cbf326-32ed-4a66-be3e-18d29c8766a2",
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "Ach, so this was normally only getting semanticdb files (which would correspond to some scala file), but now that we can produce them from standalone files, then that's the path that is being sent.",
        "createdAt" : "2020-12-30T21:02:33Z",
        "updatedAt" : "2020-12-31T10:33:41Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9cd2ac8f7fbab36622dcb13d1c272c4f968a361",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +82,86 @@      sourcePath <-\n        if (!filePath.isScala) SemanticdbClasspath.toScala(workspace, filePath)\n        else Some(filePath)\n      if sourcePath == focused || !clientConfig.isDidFocusProvider()\n      textDoc <- textDocument.documents.headOption"
  },
  {
    "id" : "7df63fa3-fb29-49da-b0ac-1e94cdb734d9",
    "prId" : 2232,
    "prUrl" : "https://github.com/scalameta/metals/pull/2232",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cd17562-4a8d-41d0-ab61-bda3b91c913b",
        "parentId" : null,
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "Changed here to gather all synthetics at a spot - can happen especially with multiple implicit conversions at the same spot. ",
        "createdAt" : "2020-11-16T17:33:14Z",
        "updatedAt" : "2020-11-16T17:33:14Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d968b16f63bed12de7c49bbcbabc0559798e84e",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +155,159 @@    }.distinct\n\n    if (interestingSynthetics.nonEmpty)\n      addToHover(\n        pcHover,"
  }
]