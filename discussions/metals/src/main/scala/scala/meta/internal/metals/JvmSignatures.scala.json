[
  {
    "id" : "b1f887c7-9136-46b9-8dae-e0fa90c86ed7",
    "prId" : 1783,
    "prUrl" : "https://github.com/scalameta/metals/pull/1783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8287ed85-803b-498a-9b69-3324392ea076",
        "parentId" : null,
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "We also take methods into account now, which in case of java files will mean that the breakpoints will work properly even with an inner class.",
        "createdAt" : "2020-05-28T15:26:18Z",
        "updatedAt" : "2020-06-02T20:02:03Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "354a7590e2040752863a8b6566562324bc6d9483",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +33,37 @@  }\n\n  private def findClass(symbol: String): String = {\n    val desc = symbol.desc\n    if (desc.isTerm || desc.isType) {"
  },
  {
    "id" : "b3afa6ec-2631-40c3-a43b-65ae105db5b0",
    "prId" : 1163,
    "prUrl" : "https://github.com/scalameta/metals/pull/1163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40780578-0734-433d-97a2-8ad9bac04a73",
        "parentId" : null,
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "Does it work inside annonymous classes?",
        "createdAt" : "2019-12-16T11:32:33Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      },
      {
        "id" : "c3722f0a-7f28-4f14-9594-4d55361fa305",
        "parentId" : "40780578-0734-433d-97a2-8ad9bac04a73",
        "authorId" : "99b86a37-7b24-412b-846e-038ecface4d6",
        "body" : "Added a test case for that",
        "createdAt" : "2019-12-17T09:15:03Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : "99b86a37-7b24-412b-846e-038ecface4d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "04ef30f47759c2620cd886265e4c50169245a539",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@      }\n    }\n    val fqcn = loop(definition.symbol.ownerChain, new StringBuilder)\n    TypeSignature(fqcn)\n  }"
  }
]