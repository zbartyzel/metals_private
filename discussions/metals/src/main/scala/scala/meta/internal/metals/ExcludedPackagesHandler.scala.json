[
  {
    "id" : "d864c9b1-6395-4589-b0af-88f4c7922bb1",
    "prId" : 2012,
    "comments" : [
      {
        "id" : "4df9e24d-20c0-4063-86d4-59c23b7a617d",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "If we did:\r\n`def isExcludedPackage(pkg: String): Boolean = cachedExclusions.exists(excluded => pkg.startsWith(excluded))`\r\n\r\nIt would not work only in 1 case where we created this class but did not call update yet, because `cachedExclusions` would be empty list.\r\n\r\nBut if we did:\r\n`private var cachedExclusions: List[String] = prepareCache(pkgsToExclude)`\r\n\r\nThen this should work? \r\n\r\nFine as it now, just curious what you think?",
        "createdAt" : "2020-09-01T07:11:39Z",
        "updatedAt" : "2020-09-01T08:04:55Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "be41f587-9af1-4ac4-8af2-fd1110882e1e",
        "parentId" : "4df9e24d-20c0-4063-86d4-59c23b7a617d",
        "author" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "So my main reason for doing it this is that since this is created right after the user configuration, it will get the default user configuration value, which is `None`. Then if the user has any value set, it will run the update right away as soon as the initialize happens. My thinking was then that we'd run this twice no matter what whenever it was used. So my attempt to avoid that was to hold off on running the `prepareCache` until it's needed to index the first time, or when the `initialize` process happens and the change is picked up during the `didChangeConfiguration`. So I don't think it matters a ton, but again, was trying to avoid running `prepareCache` twice right in a row. I'm open to maybe changing this, but also don't see a downside of having it this way. WDYT?",
        "createdAt" : "2020-09-01T07:55:07Z",
        "updatedAt" : "2020-09-01T08:04:55Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "985bd9fe-4c96-4fb0-9c33-44d3996b91b1",
        "parentId" : "4df9e24d-20c0-4063-86d4-59c23b7a617d",
        "author" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "Ahh yes right!, I did not notice it will be called twice in that case, all good :+1:",
        "createdAt" : "2020-09-01T08:04:41Z",
        "updatedAt" : "2020-09-01T08:04:55Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "742d615938b7ae27e2a94fdcb0daa3d765c5a4ba",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@   */\n  def isExcludedPackage(pkg: String): Boolean = {\n    if (cachedExclusions.nonEmpty) {\n      cachedExclusions.exists(excluded => pkg.startsWith(excluded))\n    } else {"
  }
]