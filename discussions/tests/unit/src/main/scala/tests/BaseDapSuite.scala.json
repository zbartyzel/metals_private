[
  {
    "id" : "8bab25b2-0e56-46b7-bda2-471ebe2b1369",
    "prId" : 1625,
    "prUrl" : "https://github.com/scalameta/metals/pull/1625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00a59942-cd4f-446b-b55c-b1add6fb34b5",
        "parentId" : null,
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "@olafurpg @gabro It seems that if we use something different than `munitExecutionContext` we get:\r\n```\r\nX tests.debug.StackFrameDapSuite.afterAll  0.002s java.lang.IllegalArgumentException: requirement failed\r\n2020-04-15T12:00:59.8858923Z [error]     at scala.Predef$.require(Predef.scala:268)\r\n2020-04-15T12:00:59.8859382Z [error]     at scala.concurrent.BatchingExecutor$Batch.run(BatchingExecutor.scala:55)\r\n2020-04-15T12:00:59.8859785Z [error]     at scala.concurrent.Future$InternalCallbackExecutor$.unbatchedExecute(Future.scala:875)\r\n2020-04-15T12:00:59.8860176Z [error]     at scala.concurrent.BatchingExecutor$Batch.blockOn(BatchingExecutor.scala:96)\r\n2020-04-15T12:00:59.8872621Z [error]     at scala.concurrent.package$.blocking(package.scala:146)\r\n2020-04-15T12:00:59.8873105Z [error]     at scala.concurrent.java8.FuturesConvertersImpl$CF.get(FutureConvertersImpl.scala:92)\r\n2020-04-15T12:00:59.8873645Z [error]     at scala.meta.internal.metals.MetalsLanguageServer.cancel(MetalsLanguageServer.scala:89)\r\n2020-04-15T12:00:59.8874081Z [error]     at scala.meta.internal.metals.MetalsLanguageServer.cancelAll(MetalsLanguageServer.scala:97)\r\n2020-04-15T12:00:59.8874432Z [error]     at tests.BaseLspSuite.afterAll(BaseLspSuite.scala:46)\r\n2020-04-15T12:00:59.8874769Z [error]     at munit.MUnitRunner.$anonfun$runAfterAll$3(MUnitRunner.scala:160)\r\n```\r\nany idea how we can make it clearer? Maybe we can have an additional mapping that doesn't take executionContext?",
        "createdAt" : "2020-04-15T14:33:43Z",
        "updatedAt" : "2020-05-11T14:17:44Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      },
      {
        "id" : "768c67e0-697c-4242-82b6-61340255751e",
        "parentId" : "00a59942-cd4f-446b-b55c-b1add6fb34b5",
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "Created an issue https://github.com/scalameta/munit/issues/127",
        "createdAt" : "2020-05-11T15:00:16Z",
        "updatedAt" : "2020-05-11T15:00:17Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7c6f9fa61606c4021d0457804114d0f344e41a8",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +48,52 @@                exception\n              case Success(value) => value\n            }(munitExecutionContext)\n        )\n      })"
  }
]