[
  {
    "id" : "a140efbb-df31-498d-b78b-55b23343fa7e",
    "prId" : 1254,
    "prUrl" : "https://github.com/scalameta/metals/pull/1254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89751268-258e-414c-a76e-2f7111d7801c",
        "parentId" : null,
        "authorId" : "bc07a4cc-a4ee-48f6-ae1e-f36bf246c466",
        "body" : "this was needed in order to please the type checker, which was inferring `Serializable` when inlined.",
        "createdAt" : "2020-01-05T17:08:47Z",
        "updatedAt" : "2020-01-05T17:30:54Z",
        "lastEditedBy" : "bc07a4cc-a4ee-48f6-ae1e-f36bf246c466",
        "tags" : [
        ]
      },
      {
        "id" : "8d818bcb-aff1-474c-b767-960269476f1b",
        "parentId" : "89751268-258e-414c-a76e-2f7111d7801c",
        "authorId" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "body" : "What ðŸ˜Ÿ That's surprising. Looks like a compiler bug in that case. Is it worth adding a `def test(name: String, tags: Tag*)` overload to avoid similarly confusing failures for basic cases?",
        "createdAt" : "2020-01-05T17:40:30Z",
        "updatedAt" : "2020-01-05T17:40:53Z",
        "lastEditedBy" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c01432863b62a73bbfb809ed6739a6bf33ed62f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +8,12 @@    val nonempty = a.trim.linesIterator.map(_.trim).filterNot(_.isEmpty).toArray\n    val testName = nonempty.headOption.getOrElse(\"<empty>\")\n    test(testName) {\n      val compressed = Compression.compress(\n        nonempty.iterator.filter(_.nonEmpty).map(ClassfileElementPart(_))"
  }
]