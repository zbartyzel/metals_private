[
  {
    "id" : "cccf2911-b4e3-41bf-b882-4816664dfd3f",
    "prId" : 1254,
    "comments" : [
      {
        "id" : "debf0904-e200-417b-a9aa-dfd5ec7c1e3a",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "this was needed in order to please the type checker, which was inferring `Serializable` when inlined.",
        "createdAt" : "2020-01-05T17:08:47Z",
        "updatedAt" : "2020-01-05T17:30:54Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e18827a4-488b-41df-b2f5-a98df2c91f01",
        "parentId" : "debf0904-e200-417b-a9aa-dfd5ec7c1e3a",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What ðŸ˜Ÿ That's surprising. Looks like a compiler bug in that case. Is it worth adding a `def test(name: String, tags: Tag*)` overload to avoid similarly confusing failures for basic cases?",
        "createdAt" : "2020-01-05T17:40:30Z",
        "updatedAt" : "2020-01-05T17:40:53Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8c01432863b62a73bbfb809ed6739a6bf33ed62f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +8,12 @@    val nonempty = a.trim.linesIterator.map(_.trim).filterNot(_.isEmpty).toArray\n    val testName = nonempty.headOption.getOrElse(\"<empty>\")\n    test(testName) {\n      val compressed = Compression.compress(\n        nonempty.iterator.filter(_.nonEmpty).map(ClassfileElementPart(_))"
  }
]