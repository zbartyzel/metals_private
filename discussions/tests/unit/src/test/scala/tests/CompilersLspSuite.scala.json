[
  {
    "id" : "38e1da53-badb-428f-9d03-a26e91130208",
    "prId" : 1590,
    "prUrl" : "https://github.com/scalameta/metals/pull/1590",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63ab4358-52fb-4f08-9451-e09b856d0bc9",
        "parentId" : null,
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "Shouldn't we try to change both files to contain new names and assert that both new names are picked up from another file after only compiling `a`?\r\n\r\nI think that would test the same thing and not require the additional `loadedPresentationCompilerCount`",
        "createdAt" : "2020-04-08T13:19:39Z",
        "updatedAt" : "2020-04-08T13:23:08Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      },
      {
        "id" : "28f3a1b8-d83a-46e2-95a7-4b8124b6afc0",
        "parentId" : "63ab4358-52fb-4f08-9451-e09b856d0bc9",
        "authorId" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "body" : "I agree with the principle that we should reproduce the user-facing situation instead of testing against implementation details. My concern with reproducing the exact scenario is that we'll end up with a flaky test. \r\n\r\nIt's critical that we reset the presentation compiler for getting good user experience and I think it will be helpful in the future to have `isLoaded()` as a toolkit to test related fixes. \r\n\r\n\r\n",
        "createdAt" : "2020-04-08T13:40:04Z",
        "updatedAt" : "2020-04-08T13:40:04Z",
        "lastEditedBy" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "tags" : [
        ]
      }
    ],
    "commit" : "cde53f30621ebb2fd6e640b81e837fb5f4e5dabf",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@      )\n      _ = assertNoDiagnostics()\n      _ = assertEquals(0, server.server.loadedPresentationCompilerCount())\n    } yield ()\n  }"
  }
]