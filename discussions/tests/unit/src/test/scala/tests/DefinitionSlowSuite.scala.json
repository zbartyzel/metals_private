[
  {
    "id" : "f0c91453-c566-4f6d-a39e-0937bda3ae65",
    "prId" : 775,
    "prUrl" : "https://github.com/scalameta/metals/pull/775",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58191d53-d337-4763-b48c-3092697f9d08",
        "parentId" : null,
        "authorId" : "8a84f8b6-8e04-4802-937a-9ed4764e8556",
        "body" : "I tweaked this test case for fixing some that are related to the change, but this test case is still failing (even in `master` branch)...\r\n\r\n```\r\n...\r\n=======\r\n=> Diff\r\n=======\r\n---âˆ™\r\n+++âˆ™\r\n@@ -2,3 +2,3 @@\r\n package a\r\n-import java.util.concurrent.Future/*<no symbol>*/ // unused\r\n+import java.util.concurrent.Future/*Future.java*/ // unused\r\n import scala.util.Failure/*Try.scala*/ // unused\r\n@@ -6,3 +6,3 @@\r\n   val message/*L4*/ = Message/*Message.java:1*/.message/*Message.java:2*/\r\n-  new java.io.PrintStream/*<no symbol>*/(new java.io.ByteArrayOutputStream/*<no symbol>*/())\r\n+  new java.io.PrintStream/*PrintStream.java*/(new java.io.ByteArrayOutputStream/*ByteArrayOutputStream.java*/())\r\n   println/*Predef.scala*/(message/*L4*/)\r\n@@ -11,3 +11,3 @@\r\n package a\r\n-import java.util.concurrent.Future/*<no symbol>*/ // unused\r\n+import java.util.concurrent.Future/*Future.java*/ // unused\r\n import scala.util.Failure/*Try.scala*/ // unused\r\n@@ -16,3 +16,3 @@\r\n   test/*FunSuiteLike.scala*/(\"a\") {\r\n-    val condition/*L6*/ = Main/*Main.scala:3*/.message/*Main.scala:4*/.contains/*<no symbol>*/(\"Hello\")\r\n+    val condition/*L6*/ = Main/*Main.scala:3*/.message/*Main.scala:4*/.contains/*String.java*/(\"Hello\")\r\n     assert/*Assertions.scala*/(condition/*L6*/)\r\n  tests.DiffAssertions$.colored(DiffAssertions.scala:103)\r\n  tests.BaseSuite.assertNoDiff(BaseSuite.scala:102)\r\n  tests.DefinitionSlowSuite$.$anonfun$new$5(DefinitionSlowSuite.scala:71)\r\n  scala.util.Success.$anonfun$map$1(Try.scala:255)\r\n  scala.util.Success.map(Try.scala:213)\r\n  scala.concurrent.Future.$anonfun$map$1(Future.scala:292)\r\n  scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33)\r\n  scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33)\r\n  scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)\r\n  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n  java.lang.Thread.run(Thread.java:748)\r\n...\r\n```\r\n\r\nI'm not sure why we cannot resolve the location of java resources :thinking:\r\n",
        "createdAt" : "2019-06-18T10:40:19Z",
        "updatedAt" : "2019-06-18T17:58:25Z",
        "lastEditedBy" : "8a84f8b6-8e04-4802-937a-9ed4764e8556",
        "tags" : [
        ]
      },
      {
        "id" : "545bd37c-1e81-4907-81f6-6c4b9ff90c8a",
        "parentId" : "58191d53-d337-4763-b48c-3092697f9d08",
        "authorId" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "body" : "The test is passing on CI, it might not be detecting the JDK sources on your local computer. What is the output for `JdkSources()` on your computer? It's supposed to be something like\r\n```\r\n$ echo $JAVA_HOME/src.zip\r\n/Library/Java/JavaVirtualMachines/jdk1.8.0_192.jdk/Contents/Home/src.zip\r\n```",
        "createdAt" : "2019-06-18T12:59:46Z",
        "updatedAt" : "2019-06-18T17:58:25Z",
        "lastEditedBy" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "tags" : [
        ]
      },
      {
        "id" : "254dd05b-8e9f-4e2e-82ea-069a84132d43",
        "parentId" : "58191d53-d337-4763-b48c-3092697f9d08",
        "authorId" : "8a84f8b6-8e04-4802-937a-9ed4764e8556",
        "body" : "Ah, this was just the problem on my local computer, `sudo apt install openjdk-8-source` fixed this :)",
        "createdAt" : "2019-06-18T15:59:05Z",
        "updatedAt" : "2019-06-18T17:58:25Z",
        "lastEditedBy" : "8a84f8b6-8e04-4802-937a-9ed4764e8556",
        "tags" : [
        ]
      },
      {
        "id" : "4f2e5af5-ca0f-4c85-b633-dc61e31d5bf3",
        "parentId" : "58191d53-d337-4763-b48c-3092697f9d08",
        "authorId" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "body" : "Our docs should probably mention this for ubuntu users ðŸ¤” ",
        "createdAt" : "2019-06-19T08:16:03Z",
        "updatedAt" : "2019-06-19T08:16:03Z",
        "lastEditedBy" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4cfc3a51daeb457a8f1e26bea4196104de517380",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +129,133 @@           |    assert/*Assertions.scala*/(condition/*L8*/)\n           |  }\n           |}\n           |\"\"\".stripMargin\n      )"
  },
  {
    "id" : "a1068303-efe0-4b8c-a347-f2e4223e301c",
    "prId" : 775,
    "prUrl" : "https://github.com/scalameta/metals/pull/775",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbb63d34-a633-4e1b-8ea7-dd89987ffff8",
        "parentId" : null,
        "authorId" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "body" : "This line is failing because the order of results seems indeterministic https://dev.azure.com/olafurpg/Metals/_build/results?buildId=547&view=logs&jobId=0da5d1d9-276d-5173-c4c4-9d4d4ed14fdb&taskId=5494183b-801e-5084-3b4b-5451c6a14ee1&lineStart=5119&lineEnd=5120&colStart=1&colEnd=38\r\n\r\n```diff\r\n-  val name/*;L4;B.scala:3*/ = \"John\"\r\n+  val name/*;B.scala:3;L4*/ = \"John\"\r\n```\r\n\r\nWe should sort the location results in the tests to ensure stable output.",
        "createdAt" : "2019-06-18T12:58:13Z",
        "updatedAt" : "2019-06-18T17:58:25Z",
        "lastEditedBy" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "tags" : [
        ]
      },
      {
        "id" : "3c4a091c-11e6-487f-97dc-df2cc3be1ffe",
        "parentId" : "cbb63d34-a633-4e1b-8ea7-dd89987ffff8",
        "authorId" : "8a84f8b6-8e04-4802-937a-9ed4764e8556",
        "body" : "sorted https://github.com/scalameta/metals/pull/775/files#diff-7b39581a6c581b96e5939753620ed527R604",
        "createdAt" : "2019-06-18T18:28:15Z",
        "updatedAt" : "2019-06-18T18:28:15Z",
        "lastEditedBy" : "8a84f8b6-8e04-4802-937a-9ed4764e8556",
        "tags" : [
        ]
      }
    ],
    "commit" : "4cfc3a51daeb457a8f1e26bea4196104de517380",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +175,179 @@           |package a\n           |object A/*B.scala:3*/ {\n           |  val name/*;B.scala:3;L4*/ = \"John\"\n           |  def main/*L3*/() = {\n           |    println/*Predef.scala*/(name/*L2*/)"
  },
  {
    "id" : "7a8816df-2bcb-419b-b26d-d03853b69ec2",
    "prId" : 775,
    "prUrl" : "https://github.com/scalameta/metals/pull/775",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b700b45-73b2-4373-91f6-ff48febc3f51",
        "parentId" : null,
        "authorId" : "8a84f8b6-8e04-4802-937a-9ed4764e8556",
        "body" : "Hmm, I'm not sure why this change effects like this ...",
        "createdAt" : "2019-06-18T18:39:50Z",
        "updatedAt" : "2019-06-18T18:39:51Z",
        "lastEditedBy" : "8a84f8b6-8e04-4802-937a-9ed4764e8556",
        "tags" : [
        ]
      },
      {
        "id" : "d540ad90-9125-4ffa-8cc1-cd97c93dd6a2",
        "parentId" : "4b700b45-73b2-4373-91f6-ff48febc3f51",
        "authorId" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "body" : "Hmm, I'm not sure either. The only thing I can think of is that we're not calling this line here in some cases https://github.com/scalameta/metals/blob/4cfc3a51daeb457a8f1e26bea4196104de517380/metals/src/main/scala/scala/meta/internal/metals/MetalsLanguageServer.scala#L1501\r\n\r\nEither way, the change looks benign so let's keep the diff.",
        "createdAt" : "2019-06-19T08:34:18Z",
        "updatedAt" : "2019-06-19T08:38:58Z",
        "lastEditedBy" : "a2bc4287-0a04-46c7-ab03-33243f01e61a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4cfc3a51daeb457a8f1e26bea4196104de517380",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +277,281 @@           |.metals/readonly/cats/Contravariant.scala:13:15: information: not found: value Contravariant\n           |      val G = Contravariant[G]\n           |              ^^^^^^^^^^^^^\n           |.metals/readonly/cats/Contravariant.scala:24:61: information: not found: type Î»\n           |  override def composeFunctor[G[_]: Functor]: Contravariant[Î»[Î± => F[G[Î±]]]] ="
  }
]