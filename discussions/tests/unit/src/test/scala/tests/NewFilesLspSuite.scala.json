[
  {
    "id" : "aadff76d-b63e-4416-bd10-f28cbf69a4ac",
    "prId" : 2075,
    "prUrl" : "https://github.com/scalameta/metals/pull/2075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0691bb34-8090-487d-8fe0-a0b320019e73",
        "parentId" : null,
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "Could we actually run the 3 cases in one check? Since the parameters are basically the same, we could just generate all the combinations `Right` `Right`, `Right` `Left` and `Left` `Left`",
        "createdAt" : "2020-09-17T19:24:21Z",
        "updatedAt" : "2020-09-17T19:56:14Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      },
      {
        "id" : "720292a5-ecd3-4e35-a1b7-c6c5d07baf39",
        "parentId" : "0691bb34-8090-487d-8fe0-a0b320019e73",
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "I think possibly yea, but the first approach I took was to just have one check per file type, and then in the check create the file normally, and then also the other two ways, but then the check code became pretty hairy trying to get all the checked messages right in various places. So I actually then changed it to what I have now. It's more verbose, but I find it way easier to reason about.",
        "createdAt" : "2020-09-17T19:55:32Z",
        "updatedAt" : "2020-09-17T19:56:14Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      },
      {
        "id" : "31843bb2-a824-4ba0-b907-cbb803f5e7cf",
        "parentId" : "0691bb34-8090-487d-8fe0-a0b320019e73",
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "I'm going to go ahead and merge this in. If you want I can revisit and try to refactor again, but I'm assuming it's fine given your original comment ðŸ˜¬ ",
        "createdAt" : "2020-09-18T07:41:34Z",
        "updatedAt" : "2020-09-18T07:41:34Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      }
    ],
    "commit" : "42aceb96ae53255c6f79a177b0a6944f072a9689",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +46,50 @@  check(\"new-ammonite-script\")(\n    directory = Some(\"a/src/main/scala/\"),\n    fileType = Right(ammonite),\n    fileName = Right(\"Foo\"),\n    expectedFilePath = \"a/src/main/scala/Foo.sc\","
  },
  {
    "id" : "c89a3bd0-79cd-48c9-95f9-93a92734cd56",
    "prId" : 1674,
    "prUrl" : "https://github.com/scalameta/metals/pull/1674",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01e148ab-d927-4154-aba6-969c69eb92dd",
        "parentId" : null,
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "`new ClientExperimentalCapabilities(inputBoxProvider = true)` ?",
        "createdAt" : "2020-05-01T15:39:00Z",
        "updatedAt" : "2020-05-01T16:10:33Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d61baa4f3f23f311fc6754cf97d955a84d0ac9b",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +16,20 @@  override def experimentalCapabilities\n      : Option[ClientExperimentalCapabilities] =\n    Some(ClientExperimentalCapabilities.Default.copy(inputBoxProvider = true))\n  check(\"new-worksheet\")(\n    Some(\"a/src/main/scala/\"),"
  },
  {
    "id" : "073eea9e-552f-4a64-bbc6-a69a839c01b0",
    "prId" : 1624,
    "prUrl" : "https://github.com/scalameta/metals/pull/1624",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "828d2160-7098-450a-b5de-521a207fb28e",
        "parentId" : null,
        "authorId" : "58f39866-9870-40fc-83e0-d68edbbcb6f7",
        "body" : "just out of curiosity:\r\n1) why?\r\n2) Is there implicit conversion happening? I see, there is `TestOptionsConversions` at munit, but it does not look imported and available...",
        "createdAt" : "2020-04-15T16:39:38Z",
        "updatedAt" : "2020-04-16T17:50:50Z",
        "lastEditedBy" : "58f39866-9870-40fc-83e0-d68edbbcb6f7",
        "tags" : [
        ]
      },
      {
        "id" : "12793d1d-7d12-4b94-b275-7bf30185751d",
        "parentId" : "828d2160-7098-450a-b5de-521a207fb28e",
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "I can revert, but this enables adding tags and ignoring.",
        "createdAt" : "2020-04-15T17:30:04Z",
        "updatedAt" : "2020-04-16T17:50:50Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      },
      {
        "id" : "4fc8eda6-9dd4-4a04-9acc-6c62d030ec9e",
        "parentId" : "828d2160-7098-450a-b5de-521a207fb28e",
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "We also do this in other places, so we probably don't have to revert.",
        "createdAt" : "2020-04-15T18:41:54Z",
        "updatedAt" : "2020-04-16T17:50:50Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f5c5c4a8d2e63df9475195ca1d0c4346071ba7e",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +126,130 @@  private def indent = \"  \"\n\n  private def check(testName: TestOptions)(\n      directory: Option[String],\n      pickedKind: String,"
  }
]