[
  {
    "id" : "c282129a-fbb4-45bd-a108-1e04005f126f",
    "prId" : 1546,
    "comments" : [
      {
        "id" : "1dc98ac0-cd93-483e-bd95-0b5ac93973aa",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "/cc @olafurpg dogfooding the new scalacheck module 游녢 ",
        "createdAt" : "2020-03-26T09:41:52Z",
        "updatedAt" : "2020-03-27T07:54:00Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e3881b83-3afd-4f05-a9ab-ba649a8b0efa",
        "parentId" : "1dc98ac0-cd93-483e-bd95-0b5ac93973aa",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Do we really need Scalacheck here though? It's supposed to be used over a set of possible values and here it is just normal testing. I have never found a usage for property based testing and maybe it would be better to keep the tests consistent?  \r\n\r\n",
        "createdAt" : "2020-03-26T11:55:17Z",
        "updatedAt" : "2020-03-27T07:54:00Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4d875251-3f49-4989-97c8-75e4edfb09bd",
        "parentId" : "1dc98ac0-cd93-483e-bd95-0b5ac93973aa",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "> It's supposed to be used over a set of possible values and here it is just normal testing\r\n\r\nI'm using Scalacheck to test \"all\" possible positions of the cursor inside a (fixed) document.\r\n\r\n\r\n> Do we really need Scalacheck here though?\r\n\r\nIt's not strictly necessary, but it just gives me a little more confidence that the computation is not right by chance but it holds for \"all\" possible cursor positions.\r\n\r\nThat said, if you prefer we can remove it.",
        "createdAt" : "2020-03-27T07:55:51Z",
        "updatedAt" : "2020-03-27T07:55:51Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "71b3a32f-6e1e-44b7-af82-21d122ed9c70",
        "parentId" : "1dc98ac0-cd93-483e-bd95-0b5ac93973aa",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "> I'm using Scalacheck to test \"all\" possible positions of the cursor inside a (fixed) document.\r\n\r\nI am totally blind and have not seen it. It's a perfectly valid scenario to use it in. :+1: \r\n",
        "createdAt" : "2020-03-27T08:58:08Z",
        "updatedAt" : "2020-03-27T08:58:09Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9509aaa1d7c1803f9c5304e9517a4c0370590f23",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@import org.scalacheck.Gen\nimport org.scalacheck.Prop.forAll\n\nclass NewFileTemplateSuite extends BaseSuite with ScalaCheckSuite {\n"
  },
  {
    "id" : "1ccb327e-3646-409c-b745-42e2da3ee456",
    "prId" : 1546,
    "comments" : [
      {
        "id" : "4cf50a29-6918-4da3-a41a-273f4537459f",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What is the difference between `forAll` here and `0.to(template.length).foreach { .. }`?",
        "createdAt" : "2020-03-27T11:22:16Z",
        "updatedAt" : "2020-03-27T11:22:16Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "835c8d52-b103-4cee-b9cf-5a3734dafb0c",
        "parentId" : "4cf50a29-6918-4da3-a41a-273f4537459f",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "ah, good point: in this case just the number of iterations (100 with ScalaCheck). I can revert to just using a range",
        "createdAt" : "2020-03-27T11:31:03Z",
        "updatedAt" : "2020-03-27T11:31:03Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a082290b-fc44-42c8-8495-44548091b428",
        "parentId" : "4cf50a29-6918-4da3-a41a-273f4537459f",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I think `1.to(100)` would be clearer and more consistent with the rest of the tests. Property based testing is more helpful when you can't tests all possible inputs. ",
        "createdAt" : "2020-03-27T12:04:18Z",
        "updatedAt" : "2020-03-27T12:04:18Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9509aaa1d7c1803f9c5304e9517a4c0370590f23",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@          |\"\"\".stripMargin\n    val cursorOffsetGen = Gen.chooseNum(0, template.length)\n    forAll(cursorOffsetGen) { cursorOffset =>\n      val templateWithCursor = template.patch(cursorOffset, \"@@\", 0)\n      val newFileTemplate = NewFileTemplate(templateWithCursor)"
  }
]