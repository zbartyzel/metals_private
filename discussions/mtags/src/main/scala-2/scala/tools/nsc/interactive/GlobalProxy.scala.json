[
  {
    "id" : "190e05e6-390b-410d-b049-55e8fae30ec4",
    "prId" : 2476,
    "prUrl" : "https://github.com/scalameta/metals/pull/2476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29011508-77b0-46dd-9d1e-33b2d343d643",
        "parentId" : null,
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "So I guess I don't fully understand this part. What exactly does creating and assigning a new WorkScheduler do? Mainly how does it help this situation?",
        "createdAt" : "2021-02-04T18:47:03Z",
        "updatedAt" : "2021-02-04T19:03:42Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      },
      {
        "id" : "3e059628-8a48-487a-8116-45890935af3a",
        "parentId" : "29011508-77b0-46dd-9d1e-33b2d343d643",
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "This is a bit of a hack. When we shutdown the compiler the scheduler gets replaced with something like `NoWorkScheduler` which will not accept any work. We replace it back with the default one so that the modified thread can work with it.",
        "createdAt" : "2021-02-04T19:02:13Z",
        "updatedAt" : "2021-02-04T19:03:42Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      },
      {
        "id" : "9e1d7b4f-a91d-4117-bd2c-263bdf3b4e2e",
        "parentId" : "29011508-77b0-46dd-9d1e-33b2d343d643",
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "ðŸ¤” ok, just to make sure I understand, after we shutdown, and then right below when we create a new `MetalsGlobalThread`, don't we also get a new compiler, which would already have a new WorkScheduler?",
        "createdAt" : "2021-02-04T19:06:16Z",
        "updatedAt" : "2021-02-04T19:06:29Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      },
      {
        "id" : "8155a455-4161-4d6b-b518-77a31580f2de",
        "parentId" : "29011508-77b0-46dd-9d1e-33b2d343d643",
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "Whenever Global is created it comes with it's own thread and WorkScheduler, so we can't create a new one. Here, we shutdown the compiler, which shuts down the thread and replaces the scheduler. After that, we replace the scheduler with a working one and add the new thread, in this way hijack this particular Global object. ",
        "createdAt" : "2021-02-04T19:12:35Z",
        "updatedAt" : "2021-02-04T19:12:35Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      },
      {
        "id" : "5a54cd29-549d-4bf7-9466-c256f225afb9",
        "parentId" : "29011508-77b0-46dd-9d1e-33b2d343d643",
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "Alright, I think I understand. Thanks a lot for explaining.",
        "createdAt" : "2021-02-04T19:14:02Z",
        "updatedAt" : "2021-02-04T19:14:02Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      },
      {
        "id" : "6bc8404f-a7eb-4df5-874e-d7ef49f8b466",
        "parentId" : "29011508-77b0-46dd-9d1e-33b2d343d643",
        "authorId" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "body" : "I did dig into that for a while before @mlachkar suggestion, so I do understand your confusion here. It's not perfect, it would probably be much better to just use the defaults, but I don't want to change too much and the reason for the changed compiler thread might still exist.",
        "createdAt" : "2021-02-04T19:14:31Z",
        "updatedAt" : "2021-02-04T19:14:31Z",
        "lastEditedBy" : "a7ecab15-7126-4839-9885-ed1a3031e6b8",
        "tags" : [
        ]
      },
      {
        "id" : "5bdf1cea-e185-4d11-a226-db0138c26ee3",
        "parentId" : "29011508-77b0-46dd-9d1e-33b2d343d643",
        "authorId" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "body" : "Yea understandable, just trying to wrap my head around what's fully going on here.",
        "createdAt" : "2021-02-04T19:16:01Z",
        "updatedAt" : "2021-02-04T19:16:01Z",
        "lastEditedBy" : "43e93173-6a0c-470b-b449-2889fd9eb639",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e5eb9531def3aff898c3b64e88b164c773fd1e7",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +51,55 @@      }\n    }\n    this.scheduler = new WorkScheduler\n    compileRunner = new MetalsGlobalThread(this, \"Metals\")\n    compileRunner.setDaemon(true)"
  }
]