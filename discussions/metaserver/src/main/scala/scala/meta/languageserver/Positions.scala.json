[
  {
    "id" : "2d7ec3c2-1c06-48d9-866c-143b8d3ea652",
    "prId" : 23,
    "comments" : [
      {
        "id" : "61838cb6-e724-4042-a536-714ab8db122e",
        "parentId" : null,
        "author" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "body" : "An alternative suggestion in a completely different style.  Nothing wrong with this one though if you want to keep it.  Ignore my lack of filename in the IllegalArgumentExceptions, I just whipped this up in a worksheet.\r\n\r\n```scala\r\ndef pos(content: String, line: Int, col: Int): Int = {\r\n  val (lineCount, pos) = content\r\n    .linesWithSeparators\r\n    .take(line + 1)\r\n    .foldLeft((0, 0)){ (accum, str) =>\r\n      val (lineNum, charCount) = accum\r\n      if (lineNum < line) {\r\n        (lineNum + 1, charCount + str.length)\r\n      } else {\r\n        require(str.length >= col, \"Line is not long enough\")\r\n        (lineNum + 1, charCount + col)\r\n      }\r\n    }\r\n  require(lineCount == line + 1, \"Not enough lines\")\r\n  pos\r\n}\r\n```",
        "createdAt" : "2017-11-11T18:22:49Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ab08600d-c5b1-4d5a-aeaf-b39a27b53a44",
        "parentId" : "61838cb6-e724-4042-a536-714ab8db122e",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This method is on a fairly critical path since it's run for every start/end point during completions. `foldLeft` + tuples creates a lot of unnecessary allocations compared to the while loops. \r\n\r\nHowever, I just found out that scala.meta.Input has an internal `private lazy val cachedLineIndices: Array[Int]` which allows you to get the offset of a line in from an array lookup. I've refactored to use this instead of rolling our own.",
        "createdAt" : "2017-11-11T21:47:25Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e9272f240feb4f00bdea5ee50e2808699cd0d0e",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@  }\n\n}"
  }
]