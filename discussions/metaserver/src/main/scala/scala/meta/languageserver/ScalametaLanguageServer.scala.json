[
  {
    "id" : "53bfcb4f-4dca-4442-b4ce-88efd1ce803c",
    "prId" : 158,
    "comments" : [
      {
        "id" : "098fb073-016c-4e51-812f-8fc7708f51e4",
        "parentId" : null,
        "author" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "body" : "Why do we have connection here as well as lspIn and lspOut passed in?  I thought connection was just a wrapper around lspIn and lspOut.",
        "createdAt" : "2017-12-23T16:13:46Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5e70ca3d-4ac9-4b43-ac8f-13d657fe1ccf",
        "parentId" : "098fb073-016c-4e51-812f-8fc7708f51e4",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "connection has higher level methods such as `showMessage`.\r\n\r\n`lspIn` and `lspOut` are just used to initialize it (via the `LanguageServer` constructor)",
        "createdAt" : "2017-12-23T16:15:27Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +97,101 @@    )\n  val (configurationSubscriber, configurationPublisher) =\n    ScalametaLanguageServer.configurationStream(connection)\n  val buffers: Buffers = Buffers()\n  val symbolIndex: SymbolIndex ="
  },
  {
    "id" : "587a66bd-43ec-4bd4-9ffc-80d903f13f94",
    "prId" : 157,
    "comments" : [
      {
        "id" : "6f784f65-680f-41cc-96b3-10f464299b92",
        "parentId" : null,
        "author" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "body" : "\\o/",
        "createdAt" : "2017-12-23T15:36:40Z",
        "updatedAt" : "2017-12-23T20:00:10Z",
        "lastEditedBy" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "02644898b8f2599b71ec40803a680168214c8fd9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +293,297 @@      request: TextDocumentHoverRequest\n  ): Task[Hover] = Task {\n    HoverProvider.hover(\n      symbolIndex,\n      Uri(request.params.textDocument),"
  },
  {
    "id" : "4e46e9c6-06f6-4638-9dd1-827d6b2784f6",
    "prId" : 131,
    "comments" : [
      {
        "id" : "beefcb69-e145-45dc-afcf-79ed12190d79",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "if somebody knows a better way of recursively deleting a directory with Java NIO, please let me know!",
        "createdAt" : "2017-12-15T11:14:50Z",
        "updatedAt" : "2017-12-15T11:25:20Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6ff55453-4cdd-4c0f-b8fc-7a4f8b907a26",
        "parentId" : "beefcb69-e145-45dc-afcf-79ed12190d79",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This is the best way to do it IMO :) It should be verbose!",
        "createdAt" : "2017-12-15T11:41:03Z",
        "updatedAt" : "2017-12-15T11:43:33Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c24b0c1d-3e15-435d-b9ea-a833a6ad9810",
        "parentId" : "beefcb69-e145-45dc-afcf-79ed12190d79",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "On a more serious note, this might merit inclusion in `org.langmeta.io.FileIO` where we have similar utils ",
        "createdAt" : "2017-12-15T11:41:41Z",
        "updatedAt" : "2017-12-15T11:43:33Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "867e5b2b0a081dfb481be2a14c9b7bffa47a2d98",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +348,352 @@  }\n\n  def clearCacheDirectory(): Unit =\n    Files.walkFileTree(\n      cacheDirectory.toNIO,"
  },
  {
    "id" : "cbea550a-88b4-42aa-8da7-35c55b1559c5",
    "prId" : 78,
    "comments" : [
      {
        "id" : "d2588976-8fd7-403b-8214-645b86945fb9",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "游꿀 ",
        "createdAt" : "2017-12-01T20:32:30Z",
        "updatedAt" : "2017-12-02T23:22:47Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "71da2fa975b8fb36cd888c23d0a8b0214a68e679",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +117,121 @@      ),\n      definitionProvider = true,\n      referencesProvider = true,\n      documentSymbolProvider = true,\n      documentFormattingProvider = true,"
  },
  {
    "id" : "b573ea24-95db-40e5-839e-8d1860eed557",
    "prId" : 34,
    "comments" : [
      {
        "id" : "2b07320b-44de-4a61-996b-80a53925b2c3",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What about `package a`?",
        "createdAt" : "2017-11-15T10:45:34Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "22ce4d0e-647d-4d4c-976a-1f23c8d630c4",
        "parentId" : "2b07320b-44de-4a61-996b-80a53925b2c3",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "It falls into the `Member` case, so it will be just its `name` `a`. \r\nThis whole `qualifiedName` method is here **only** for the packages with `Select`, because their default `name` is just the last part and I think it's useful to see the full name in the outline.",
        "createdAt" : "2017-11-15T12:42:54Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fc56069f-618d-4fd8-9555-81cc5a6527fb",
        "parentId" : "2b07320b-44de-4a61-996b-80a53925b2c3",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I see, nice!",
        "createdAt" : "2017-11-15T21:04:34Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f22b970a071cd204e5269d09dea51d6223971e22",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +225,229 @@      case Term.Select(qual, name) =>\n        qualifiedName(qual).map { prefix => s\"${prefix}.${name}\" }\n      case Pkg(sel: Term.Select, _) =>\n        qualifiedName(sel)\n      case m: Member =>"
  },
  {
    "id" : "2b1290b0-9083-4790-9560-dc83913d3fb7",
    "prId" : 34,
    "comments" : [
      {
        "id" : "45de0332-b376-47bd-85d0-49256683ac36",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Glad you found this! Took me a while to learn about it :)",
        "createdAt" : "2017-11-15T10:45:49Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0658c8b5-80aa-44d3-918c-abacf87dd8f4",
        "parentId" : "45de0332-b376-47bd-85d0-49256683ac36",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "What do you mean? 游땐 ",
        "createdAt" : "2017-11-15T12:43:54Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a8d3676e-a5ea-46f3-b6ae-3408a50dffb1",
        "parentId" : "45de0332-b376-47bd-85d0-49256683ac36",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I wasn't aware of `Member` until quite recently, always found it frustrating to handle all val/val/def/class/trait/object cases",
        "createdAt" : "2017-11-15T21:04:24Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4f87f68f-2ba5-47f7-ac2a-6d80154ee8cc",
        "parentId" : "45de0332-b376-47bd-85d0-49256683ac36",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Ah, yes, it's very helpful. I just searched for whatever with `name`, when I wanted to match it with symbols from the indexer 游땏 ",
        "createdAt" : "2017-11-15T21:31:22Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f22b970a071cd204e5269d09dea51d6223971e22",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +227,231 @@      case Pkg(sel: Term.Select, _) =>\n        qualifiedName(sel)\n      case m: Member =>\n        Some(m.name.value)\n      case _ => None"
  },
  {
    "id" : "c20e6dca-fec3-480b-95d1-85fd1e48705f",
    "prId" : 34,
    "comments" : [
      {
        "id" : "0cb9033c-239f-432b-a758-c40d84526a00",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "FYI `scala.meta.contrib._` adds a `.filter` on `Tree`",
        "createdAt" : "2017-11-15T21:08:20Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "25c4077f-8a75-4f3d-8d85-db5951918817",
        "parentId" : "0cb9033c-239f-432b-a758-c40d84526a00",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Thanks, I was looking for it but found after I wrote this and then forgot to change it.",
        "createdAt" : "2017-11-15T21:38:00Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f22b970a071cd204e5269d09dea51d6223971e22",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +236,240 @@    for {\n      tree <- contents.parse[Source].toOption.toList\n      node <- tree.collect {\n        case n if n.is[Member.Type] || n.is[Member.Term] => n\n      }"
  },
  {
    "id" : "ad2efb36-4167-4a29-a73f-babb815a4ea2",
    "prId" : 23,
    "comments" : [
      {
        "id" : "9f0e6e5f-ef4e-4ece-9345-a00629ce0511",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "should we also preload all existing `compilerconfig`files at launch, similarly to what we do with `semanticdb` files?",
        "createdAt" : "2017-11-14T09:21:37Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5e4b7898-4995-4a39-8694-edd220b45fa7",
        "parentId" : "9f0e6e5f-ef4e-4ece-9345-a00629ce0511",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "We do actually, since we call this method from loadAllSemanticdbs... method, I've renamed the method to be more descriptive.",
        "createdAt" : "2017-11-14T19:36:57Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "28534346-5802-4dee-8aa8-7aa62cda2439",
        "parentId" : "9f0e6e5f-ef4e-4ece-9345-a00629ce0511",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "NB, we should really run that method asynchronously from the initialize method since it slows down server startup.",
        "createdAt" : "2017-11-14T19:37:27Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5a97c9ea-695a-4c3d-bea4-b293ca55c07d",
        "parentId" : "9f0e6e5f-ef4e-4ece-9345-a00629ce0511",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Yeah, in general I think initialize should return immediately and run the rest of the work asynchronously. We can even dynamically register for capabilities when the single services finish initializing.",
        "createdAt" : "2017-11-14T21:00:10Z",
        "updatedAt" : "2017-11-14T21:00:10Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e9272f240feb4f00bdea5ee50e2808699cd0d0e",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +138,142 @@    name match {\n      case \"semanticdb\" => semanticdbSubscriber.onNext(path)\n      case \"compilerconfig\" => compilerConfigSubscriber.onNext(path)\n      case _ => fallback(path)\n    }"
  },
  {
    "id" : "e7c8a89e-b6e8-45be-b467-a3f87f4ac1a9",
    "prId" : 23,
    "comments" : [
      {
        "id" : "ad8fdc32-7040-4972-8019-9b8f76c8f9ca",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "why is the overflow strategy gone?",
        "createdAt" : "2017-11-14T09:48:02Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "99e7fb92-8f24-4231-aeba-ba778c93adfe",
        "parentId" : "ad8fdc32-7040-4972-8019-9b8f76c8f9ca",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I added it without knowing what it does. I think we should use the default unless we know what we're doing.",
        "createdAt" : "2017-11-14T19:34:18Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e9272f240feb4f00bdea5ee50e2808699cd0d0e",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +48,52 @@    ScalametaLanguageServer.semanticdbStream\n  val (compilerConfigSubscriber, compilerConfigPublisher) =\n    Observable.multicast[AbsolutePath](MulticastStrategy.Publish)\n  def onError(e: Throwable): Unit = {\n    logger.error(e.getMessage, e)"
  },
  {
    "id" : "a9352df3-e0ad-48fa-8d14-5be752803176",
    "prId" : 21,
    "comments" : [
      {
        "id" : "c9b283eb-8357-4c37-955b-569bfb2a8d10",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Is it 100% sure that `tpeName` is never empty? 游땏 ",
        "createdAt" : "2017-11-10T15:03:40Z",
        "updatedAt" : "2017-11-10T15:03:40Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c1510b13-a654-4bd4-bf9c-9c4904be6340",
        "parentId" : "c9b283eb-8357-4c37-955b-569bfb2a8d10",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I tried hovering on everything and it never showed empty boxes 游눆 \r\n\r\nOf course I may be wrong ^^",
        "createdAt" : "2017-11-10T15:05:06Z",
        "updatedAt" : "2017-11-10T15:05:06Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b4bb2017-d287-427d-a80a-6dfefcccfaf7",
        "parentId" : "c9b283eb-8357-4c37-955b-569bfb2a8d10",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I would still add a check here, if it's not an a priori known fact that `tpeName` cannot be empty.\r\n\r\nAnother question here: why did you remove the range parameter?",
        "createdAt" : "2017-11-10T15:07:31Z",
        "updatedAt" : "2017-11-10T15:07:31Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e956a531-8897-4c6e-bc8e-a1cf471757de",
        "parentId" : "c9b283eb-8357-4c37-955b-569bfb2a8d10",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I didn't find an easy way to retrieve that from the PC. I admit I didn't look hard for it, because vscode seems to handle it pretty well even without it.",
        "createdAt" : "2017-11-10T15:09:01Z",
        "updatedAt" : "2017-11-10T15:09:16Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c6556f9d-e35c-4e6f-94ae-298ba800e961",
        "parentId" : "c9b283eb-8357-4c37-955b-569bfb2a8d10",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "As per the check, it'd be weird that `tree.tpe.widen` would return an empty string. I suppose if it ever comes up we can handle it pretty easily :)",
        "createdAt" : "2017-11-10T15:10:46Z",
        "updatedAt" : "2017-11-10T15:10:46Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c4e919e5-0748-4d67-87fe-b7d36e7b6b3e",
        "parentId" : "c9b283eb-8357-4c37-955b-569bfb2a8d10",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Works great! 游눮 So cool!\r\nAnd yes, I thought that without range symbols won't be highlighted correctly, but both VS Code and Atom handle it very well.",
        "createdAt" : "2017-11-10T15:36:46Z",
        "updatedAt" : "2017-11-10T15:36:46Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "122ec665a5096b2c5408dc9d9320eac87adb0549",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +252,256 @@    compiler.typeAt(path, position.line, position.character) match {\n      case None => Hover(Nil, None)\n      case Some(tpeName) =>\n        Hover(\n          contents = List("
  }
]