[
  {
    "id" : "16e703d3-458c-4190-b987-0349882be454",
    "prId" : 45,
    "comments" : [
      {
        "id" : "28832cc7-6cd5-4ff3-896f-533a785cccc1",
        "parentId" : null,
        "author" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "body" : "Given that withDB looks safe and convenient, and createDBThatIPromiseToClose looks less attractive, when would I use the unsafe version?  Is there enough overhead to withDB that I don't want to use it in some scenarios?",
        "createdAt" : "2017-11-22T21:33:28Z",
        "updatedAt" : "2017-11-22T21:53:24Z",
        "lastEditedBy" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "72341183-4df5-4483-a159-6f2b3340662a",
        "parentId" : "28832cc7-6cd5-4ff3-896f-533a785cccc1",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I'm not sure yet. To be honest I'm kind of leaning towards sqlite with a single table\r\n\r\n```\r\ncreate table index(\r\nkey bytes primary key,\r\nvalue bytes,\r\nbinaryVersion string\r\n)\r\n```\r\nwhere we can upgrade binary version when we change the indexing algorithms and want clean up old indices.\r\n\r\nIt wouldn't be a big change from what we have now using plain jdbc, and we could avoid the locking issues.",
        "createdAt" : "2017-11-22T21:41:46Z",
        "updatedAt" : "2017-11-22T21:53:24Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "07b899d0ababc60348d3fbfc05eefbfd0ba43538",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +80,84 @@  }\n\n  def withDB[T](directory: File)(f: LevelDBMap => T): T = {\n    // TODO(olafur) gracefully fallback when the db is in use by another thread.\n    // can happen with multiple language servers running at the same time."
  }
]