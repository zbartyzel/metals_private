[
  {
    "id" : "b6871f5f-c3a7-4c3a-a9b6-0ef892f66528",
    "prId" : 337,
    "prUrl" : null,
    "prSource" : null,
    "comments" : [
      {
        "id" : "d01465d4-4800-417e-8a7c-4a18fab97518",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Have you considered the trade-offs wrt `ConcurrentHashMap`? I'm asking because `ConcurrentHashMap` is my go-to for these scenarios since it's generally faster.",
        "createdAt" : "2018-11-24T20:05:01Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "36b2e430-7597-4cd9-a6d1-f180468fb056",
        "parentId" : "d01465d4-4800-417e-8a7c-4a18fab97518",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I didn't use `ConcurrentHashMap` since the `computeIfAbsent` instructions say the compute function should be \"short and simple\" and in this class it's expensive. However, worst case it blocks with synchronized either way so can just use `ConcurrentHashMap`. I agree that's better for consistency 游녨 ",
        "createdAt" : "2018-11-25T11:24:05Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ce08b46e-9813-4f98-a77b-4479b7c41094",
        "parentId" : "d01465d4-4800-417e-8a7c-4a18fab97518",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Turns out that `ConcurrentHashMap` results in a deadlock or infinite loop at\r\n\r\n```\r\n\"ForkJoinPool.commonPool-worker-1\" #96 daemon prio=5 os_prio=31 tid=0x00007f9cec46c000 nid=0x7323 runnable [0x0000700008402000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1069)\r\n        at java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:1006)\r\n        at scala.meta.internal.metals.InteractiveSemanticdbs.$anonfun$compile$3(InteractiveSemanticdbs.scala:98)\r\n```\r\n\r\nBack to `Collections.synchronizedMap` it is then.",
        "createdAt" : "2018-11-26T10:48:34Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab78d5883e2e77a843cca1ea641084e6e4a2875",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@  private val textDocumentCache = Collections.synchronizedMap(\n    new java.util.HashMap[AbsolutePath, s.TextDocument]()\n  )\n\n  def reset(): Unit = {"
  },
  {
    "id" : "5f88d551-20d9-41b1-8677-a6a8fa9fe593",
    "prId" : 2345,
    "prUrl" : "https://github.com/scalameta/metals/pull/2345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19d05e1b-c1a0-4206-b99c-4dc60f4b7b66",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I added two fallbacks here - worksheet presentation compiler and the standalone one as a last resort.",
        "createdAt" : "2020-12-29T15:43:05Z",
        "updatedAt" : "2020-12-31T10:33:41Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d9cd2ac8f7fbab36622dcb13d1c272c4f968a361",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +169,173 @@          .flatMap(compilers().loadWorksheetCompiler)\n      }\n      .getOrElse(compilers().ramboCompiler)\n\n    val uri = source.toURI.toString"
  }
]